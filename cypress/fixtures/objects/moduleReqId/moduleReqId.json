{
    "scenarioNames": {
        "Accessibility": {
            "Accessibility.closedCaptionsSettings - Positive Scenario: Disable closedcaptions": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.1",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Enable closedcaptions": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.2",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontFamily-monospaced_sanserif": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.3",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontFamily-cursive": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.4",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontFamily-proportional_serif": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.5",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontFamily-monospaced_serif": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.6",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontFamily-proportional_sanserif": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.7",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontFamily-smallcaps": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.8",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontFamily-casual": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.9",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set smallcaps": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.10",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontSize-1": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.11",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontSize-0.5": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.12",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontSize-1.5": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.13",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontColor-#ff00ff": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.14",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontEdge-raised": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.15",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontEdge-none": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.16",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontEdge-depressed": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.17",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontEdge-uniform": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.18",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontEdge-dropShadow-left": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.19",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontEdge-dropShadow-right": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.20",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontEdgeColor-#FFFFFF": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.21",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set backgroundColor-#7f7f7f": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.22",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set fontOpacity-75": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.23",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set backgroundOpacity-75": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.24",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set textAlign-left": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.25",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set textAlign-center": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.26",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set textAlign-right": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.27",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set textAlignVertical-top": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.28",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set textAlignVertical-middle": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.29",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set textAlignVertical-bottom": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.30",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set windowColor-white": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.31",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set windowOpacity-50": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.32",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: Set preferredLanguages": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.33",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: fontFamily with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.34",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: fontSize with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.35",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: fontColor with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.36",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: fontEdge with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.37",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: fontEdgeColor with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.38",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: backgroundColor with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.39",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: backgroundOpacity with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.40",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: textAlign with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.41",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: textAlignVertical with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.42",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: windowColor with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.43",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptionsSettings - Positive Scenario: windowOpacity with 'null' params": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.44",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidanceSettings - Positive Scenario: Disable voiceguidance": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.45",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidanceSettings - Positive Scenario: Enable voiceguidance": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.46",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidanceSettings - Positive Scenario: Set speed-1": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.47",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidanceSettings - Positive Scenario: Set speed-0.5": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.48",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidanceSettings - Positive Scenario: Set speed-2": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.49",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.audioDescriptionSettings - Positive Scenario: Disable audioDescriptionSettings": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.50",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.audioDescriptionSettings - Positive Scenario: Enable audioDescriptionSettings": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.51",
                            "description": "Positive Scenario: Validating accessibility.closedCaptionsSettings"
                        }
                    }
                ]
            },
            "Accessibility.onClosedCaptionsSettingsChanged event - Positive Scenario: Clear listeners": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.52",
                            "description": "Clearing accessibility.onClosedCaptionsSettingsChanged event listener"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Disable closedcaptions": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.53",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set fontFamily-monospaced_sanserif": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.54",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set fontSize-1": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.55",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set fontColor-#ffffff": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.56",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set fontEdge-raised": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.57",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set fontEdgeColor-#7f7f7f": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.58",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set backgroundColor-#000000": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.59",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set fontOpacity-100": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.60",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set backgroundOpacity-100": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.61",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set textAlign-left": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.62",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set textAlignVertical-top": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.63",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set windowColor-#7f7f7f": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.64",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.closedCaptions - Positive Scenario: Set windowOpacity-40": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.65",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidance - Positive Scenario: Disable voiceguidance": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.66",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidance - Positive Scenario: Enable voiceguidance": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.66",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            },
            "Accessibility.voiceGuidance - Positive Scenario: Set speed-1": {
                "req": [
                    {
                        "method": {
                            "id": "Accessibility 1.66",
                            "description": "Positive Scenario: Validating accessibility.closedCaptions"
                        }
                    }
                ]
            }
        },
        "UserGrants": {
            "UserGrants.Capability - Positive Scenario: Validate Capabilities Grant access with two options, first option(with fingerprint) is not supported and second option(with pinChallenge and acknowledge) is supported": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.1",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Positive Scenario: Validate Capabilities Grant access with two options, first option(with pinChallenge and acknowledge) is supported and second option(with fingerprint) is not supported": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.2",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Positive Scenario: Validate Capabilities Grant access with role manage": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.3",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Positive Scenario: Validate Capabilities Grant access with role provide": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.4",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Negative Scenario: Validate Capabilities access denied for pinChallenge": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.5",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Negative Scenario: Validate Capabilities access denied for ackChallenge": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.6",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Grant - Positive Scenario: Validate Capabilities with denied (pinChallenge) and lifespan once": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.7",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability Grant access with one step option(only acknowledgeChallenge)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.7",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability Grant access with scope device": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.8",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capability access denied for pinchallenge with scope device": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.9",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with granted (pinChallenge) and lifespan forever": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.10",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capabilities with denied (pinChallenge) and lifespan forever": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.11",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with granted (pinChallenge) and lifespan appActive": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.12",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capabilities with denied (pinChallenge) and lifespan appActive": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.13",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with granted (ackchallenge) and lifespan:seconds lifespanTtl:60 sec": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.14",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capabilities with denied (ackchallenge) and lifespan:seconds lifespanTtl:60 sec": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.15",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with grant(pinChallenge) and lifespan:seconds lifespanTtl:800sec - after reboot within ttl it should not ask for grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.16",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with grant(ackchallenge) and lifespan:seconds lifespanTtl:60sec - reboot after ttl and it should ask grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.17",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capabilities with denied (pinChallenge) and lifespan:seconds lifespanTtl:800sec - after reboot within ttl and it should not ask grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.18",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capabilities with denied (ackchallenge) and lifespan:seconds lifespanTtl:60sec - reboot after ttl and it should ask grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.19",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capability Without supported capability expecting error": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.20",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: privacySetting - autoApplyPolicy:always property-getter:true silently grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.21",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability autoApplyPolicy:always property-getter:false silently denied": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.22",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability autoApplyPolicy:disallowed property-getter:false silently denied": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.23",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with privacySetting - autoApplyPolicy:allowed property-getter:true silently grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.24",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with privacySetting - autoApplyPolicy:allowed property-getter:false grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.25",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with privacySetting - autoApplyPolicy:allowed property-getter:false deny": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.26",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with privacySetting - autoApplyPolicy:disallowed property-getter:true grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.27",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with privacySetting - autoApplyPolicy:disallowed property-getter:true deny": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.28",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: with privacySetting - Validate Capability autoApplyPolicy:never property-getter:true grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.29",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: with privacySetting - Validate Capability autoApplyPolicy:never property-getter:false grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.30",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: with privacySetting - Validate Capability autoApplyPolicy:never property-getter:true deny": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.31",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: with privacySetting - Validate Capability autoApplyPolicy:never property-getter:false deny": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.32",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario:privacySetting - Validate Capability updateProperty:true - property-getter:true deny property should be set to false": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.33",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario:privacySetting - Validate Capability updateProperty:false - property-getter:true deny property should not be updated": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.34",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario:privacySetting - Validate Capability updateProperty:true - property-getter:false grant property should be set to false": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.35",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario:privacySetting - Validate Capability updateProperty:true - property-getter:true grant property should not be changed": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.36",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario:privacySetting - Validate Capability updateProperty:false - property-getter:false grant property should not be changed": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.37",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability Allow grant for one API and all API's should have grant in group": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.38",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability Allow grant for one API and clear grant, call another API it will ask for grant again": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.39",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability Deny grant for one API and all API's shouldn't have grant in group": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.40",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Positive Scenario: AcknowledgeChallenge Grant is deferred by exiting overlay": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.42",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Positive Scenario: Acknowledgechallenge Grant is deferred based on the timeout (4 seconds)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.43",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with grant (pinChallenge) and lifespan powerActive - after reboot deny and validate": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.44",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Negative Scenario: Validate Capabilities with denied (pinChallenge) and lifespan powerActive - after reboot grant and validate": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.45",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capabilities with privacySetting - autoApplyPolicy:allowed property-getter:true property:Privacy.allowWatchHistory silently grant": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.46",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capabilities - Positive Scenario: Validate Capability permission in 2 diff devices": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.57",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate Capability.request granted(ackChallenge)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.49",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate Capability.request Denied(ackChallenge)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.50",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate userGrants.request by granting for role use": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.51",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate userGrants.request by granting for role manage": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.52",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Negative Scenario: Validate userGrants.request by denying for role use": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.53",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Negative Scenario: Validate userGrants.request by denying for role manage": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.54",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Negative Scenario: Validate userGrants.request call with role use, but grantpolicy having manage capability": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.55",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate UserGrants.request which grantpolicy is not present in manifest": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.56",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate userGrants.request by deferring": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.57",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate userGrants.request by deferring with timeout": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.58",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Positive Scenario: Validate usergrants.request by granting for role provide": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.59",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.request - Negative Scenario: Validate usergrants.request by denying for role provide": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.60",
                            "description": "Should not be null"
                        }
                    }
                ]
            }
        },
        "CapabilitiesRequest": {
            "Capabilities.request - Positive Scenario: Validate capabilities.request by granting for role use which has grantpolicy in manifest": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.1",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Negative Scenario: Validate capabilities.request by denying for role use which has grantpolicy in manifest": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.2",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Positive Scenario: Validate capabilities.request by granting for role manage": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.3",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Negative Scenario: Validate capabilities.request by denying for role manage": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.4",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Positive Scenario: Validate capabilities.request by granting for role provide": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.5",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Negative Scenario: Validate capabilities.request by denying for role provide": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.6",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Positive Scenario: Validate capabilities.request call with role use, but grantpolicy having manage capability": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.7",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Positive Scenario: Validate capabilities.request which grantpolicy is not present in manifest": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.8",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Negative Scenario: Validate capabilities.request by deferring for role use which has grantpolicy in manifest": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.9",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Capabilities.request - Negative Scenario: Validate capabilities.request by deferring with timeout for role use which has grantpolicy in manifest": {
                "req": [
                    {
                        "method": {
                            "id": "CapabilitiesRequest 1.10",
                            "description": "Should not be null"
                        }
                    }
                ]
            }
        },
        "Capabilities": {
            "Capabilities.permitted - Positive Scenario:  Validate authentication token device capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.1",
                            "description": "Positive Scenario: Validate authentication token device capability"
                        }
                    }
                ]
            },
            "Capabilities.permitted - Positive Scenario:  Validate authentication token platform capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.2",
                            "description": "Positive Scenario: Validate authentication token platform capability"
                        }
                    }
                ]
            },
            "Capabilities.permitted - Positive Scenario:  Validate authentication token root capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.3",
                            "description": "Positive Scenario: Validate authentication token root capability"
                        }
                    }
                ]
            },
            "Capabilities.permitted - Positive Scenario:  Validate authentication token session capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.4",
                            "description": "Positive Scenario: Validate authentication token session capability"
                        }
                    }
                ]
            },
            "Capabilities.permitted - Positive Scenario:  Validate device make capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.5",
                            "description": "Positive Scenario: Validate authentication device make capability"
                        }
                    }
                ]
            },
            "Capabilities.permitted - Positive Scenario:  Validate device model capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.6",
                            "description": "Positive Scenario: Validate authentication device model capability"
                        }
                    }
                ]
            },
            "Capabilities.permitted - Positive Scenario:  Validate device sku capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.7",
                            "description": "Positive Scenario: Validate authentication device sku capability"
                        }
                    }
                ]
            },
            "Capabilities.permitted - Positive Scenario:  Validate device uid capability": {
                "req": [
                    {
                        "method": {
                            "id": "Capabilities 1.8",
                            "description": "Positive Scenario: Validate authentication device uid capability"
                        }
                    }
                ]
            }
        },
        "UserGrants_Manage": {
            "Usergrants.app - Positive Scenario: with grant(ackchallenge)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.1",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.device - Positive Scenario: with grant(ackchallenge)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.2",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.capability - Positive Scenario: with grant(ackchallenge)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.3",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.grant - Positive Scenario: grant capability at device level": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.4",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.grant - Positive Scenario: grant capability at app level": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.5",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.deny - Positive Scenario: deny capability at device level": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.6",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.deny - Positive Scenario: deny capability at app level": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.7",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.clear - Positive Scenario: clear grant at device level for role use": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.8",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.clear - Positive Scenario: clear grant at app level for role use": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.9",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.request - Positive Scenario: requesting for grant without force params, with force=true": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.10",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.request - Positive Scenario: requesting for grant without force params, with force=true and force=false": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.11",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "Usergrants.app - Positive Scenario: with grant(pinChallenge)": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.12",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Positive Scenario: by clearing the grant and validating usergrants.capability as empty": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.13",
                            "description": "Should not be null"
                        }
                    }
                ]
            },
            "UserGrants.Capability - Positive Scenario: by clearing the grant and validating usergrants.app as empty": {
                "req": [
                    {
                        "method": {
                            "id": "UserGrants 1.14",
                            "description": "Should not be null"
                        }
                    }
                ]
            }
        },
        "Lifecycle_Inactive": {
          "Lifecycle 2.3.1 Close an app from foreground": {
            "req": [
              {
                "state": {
                  "id": "1.2.2 & 3.5"
                }
              },
              {
                "history": {
                  "id": "1.1.2"
                }
              },
              {
                "event": {
                  "id": ["1.2.1", "1.2.2"]
                }
              },
              {
                "visible_check": {
                    "id": "1.2.3"
                }
              }
            ]
          },
          "Lifecycle 2.3.1 Close an app from background": {
            "req": [
              {
                "state": {
                  "id": "1.2.2 & 3.5"
                }
              },
              {
                "history": {
                  "id": "1.1.2"
                }
              },
              {
                "event": {
                  "id": ["1.2.1", "1.2.2"]
                }
              },
              {
                "visible_check": {
                  "id": "1.2.3"
                }
              }
            ]
          },
          "Lifecycle 2.3.3 No impact on closing app from inactive state": {
            "req": [
              {
                "state": {
                  "id": "1.2.2 & 3.5"
                }
              },
              {
                "history": {
                  "id": "1.1.2"
                }
              },
              {
                "event": {
                  "id": ["1.2.1", "1.2.2"]
                }
              },
              {
                "visible_check": {
                  "id": "1.2.3"
                }
              }
            ]
          }
        },
        "Lifecycle_Foreground": {
          "Lifecycle 2.2 Loading & Launching an App (initializing -> foreground)": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.3.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.3.2"
                }
              }
            ]
          },
          "Lifecycle 2.2.1 Relaunch foreground app": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.3.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.3.2"
                }
              }
            ]
          },
          "Lifecycle 2.2.5 App Launching another app": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.3.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.3.2"
                }
              }
            ]
          }
        },
        "Lifecycle_Initializing": {
            "Lifecycle 2.3.2 Cannot Close an app from initializing": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.1.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.1.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            }
        },
        "Lifecycle_Terminated": {
            "Lifecycle 2.8 Terminate app in foreground State": {
                "req": [
                    {
                        "state": {
                            "id": ""
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.8 Terminate app in background State": {
                "req": [
                    {
                        "state": {
                            "id": ""
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.8 Terminate app in initializing State": {
                "req": [
                    {
                        "state": {
                            "id": ""
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.8 Terminate app in inactive State": {
                "req": [
                    {
                        "state": {
                            "id": ""
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.8 Terminate app in suspended State": {
                "req": [
                    {
                        "state": {
                            "id": ""
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.8 Terminate app in unloading State": {
                "req": [
                    {
                        "state": {
                            "id": ""
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            }
        },
        "Lifecycle_Unloading": {
            "Lifecycle 3.4.4 No impact of multiple Finished events while unloading": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.7.1 Unloading from Inactive state": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.3.2 Cannot Close an Unloading App": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 3.4.3 finished from unloading state": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.7.2 Should not unload from active state (foreground)": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.5.1 Cannot Suspend Unloaded app": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 3.4.1 Should not finish from state other than unloading (initializing)": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 3.4.1 Should not finish from state other than unloading (foreground)": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 3.4.1 Should not finish from state other than unloading (background)": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 3.4.1 Should not finish from state other than unloading (inactive)": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 3.4.1 Should not finish from state other than unloading (suspended)": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            },
            "Lifecycle 2.3.2 Cannot Close an app that is not loaded": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "1.5.1",
                                "3.5"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": "1.5.2"
                        }
                    },
                    {
                        "event": {
                            "id": ""
                        }
                    }
                ]
            }
        },
        "Lifecycle_Background": {
          "Lifecycle 2.4.2 Background an app from foreground": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.4.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.4.3"
                }
              }
            ]
          },
          "Lifecycle 2.4.2 Background an app from inactive": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.4.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.4.3"
                }
              }
            ]
          },
          "Lifecycle 2.4.3 Cannot Background app that is not loaded": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.4.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.4.3"
                }
              }
            ]
          },
          "Lifecycle 2.4.1 Cannot Background a Backgrounded App": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.4.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.4.3"
                }
              }
            ]
          },
          "Lifecycle 2.4.3 Cannot Background app in Unloading state": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.4.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.4.3"
                }
              }
            ]
          },
          "Lifecycle 2.4.3 Cannot background app from suspended state": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.4.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.4.3"
                }
              }
            ]
          },
          "Lifecycle 2.4.3 Should not Background app in initializing state": {
            "req": [
              {
                "state": {
                  "id": "3.5"
                }
              },
              {
                "history": {
                  "id": ""
                }
              },
              {
                "event": {
                  "id": ["1.4.6", "1.3.6"]
                }
              },
              {
                "visible_check": {
                  "id": "1.4.3"
                }
              }
            ]
          }
        },
        "Lifecycle_Suspended": {
            "Lifecycle 1.6.1 App should subscribe to onSuspended listener regardless of capability": {
                "req": [
                    {
                        "state": {
                            "id": "1.6.1"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.5.4 Suspend App from Inactive state": {
                "req": [
                    {
                        "state": {
                            "id": "2.5.4"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.2.4 Relaunch a previously Suspended app after Unsuspend": {
                "req": [
                    {
                        "state": {
                            "id": "2.2.4"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.5.3 Cannot Suspend a suspended App": {
                "req": [
                    {
                        "state": {
                            "id": "2.5.3"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.5.1 Cannot Suspend a unloaded App": {
                "req": [
                    {
                        "state": {
                            "id": "2.5.1"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.5.5 Cannot relaunch Suspended App": {
                "req": [
                    {
                        "state": {
                            "id": "2.5.5"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.5.2 Cannot Suspend foreground app": {
                "req": [
                    {
                        "state": {
                            "id": "2.5.2"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.5.2 Cannot Suspend background app": {
                "req": [
                    {
                        "state": {
                            "id": "2.5.2"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.3.2 Cannot Close Suspended App": {
                "req": [
                    {
                        "state": {
                            "id": "2.3.2"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.6, 2.6.2 Unsuspending App": {
                "req": [
                    {
                        "state": {
                            "id": [
                                "2.6",
                                "2.6.2"
                            ]
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.6.1 Cannot Unsuspend in initializing State": {
                "req": [
                    {
                        "state": {
                            "id": "2.6.1"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.6.1 Cannot Unsuspend in foreground State": {
                "req": [
                    {
                        "state": {
                            "id": "2.6.1"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.6.1 Cannot Unsuspend in background State": {
                "req": [
                    {
                        "state": {
                            "id": "2.6.1"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.6.1 Cannot Unsuspend in inactive State": {
                "req": [
                    {
                        "state": {
                            "id": "2.6.1"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.6.1 Cannot Unsuspend in unloading State": {
                "req": [
                    {
                        "state": {
                            "id": "2.6.1"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 4.3 Unsuspend unloaded app": {
                "req": [
                    {
                        "state": {
                            "id": "4.3"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            },
            "Lifecycle 2.5.6 Try to suspend an app that doesn't exist": {
                "req": [
                    {
                        "state": {
                            "id": "2.5.6"
                        }
                    },
                    {
                        "history": {
                            "id": ""
                        }
                    },
                    {
                        "event": {
                            "id": [
                                "1.6.4",
                                "1.6.3"
                            ]
                        }
                    }
                ]
            }
        },
        "UserInterest": {
            "Content.requestUserInterest - Positive Scenario: Platform-UX - Notify requestUserInterest with type interest and reason playlist": {
                "req": [
                    {
                        "method": {
                            "id": "UserInterest 4.1",
                            "description": "Positive Scenario: with type interest and reason playlist"
                        }
                    }
                ]
            },
            "Content.requestUserInterest - Positive Scenario: Platform-UX - Notify requestUserInterest with type interest and reason reaction": {
                "req": [
                    {
                        "method": {
                            "id": "UserInterest 4.2",
                            "description": "Positive Scenario: with type interest and reason reaction"
                        }
                    }
                ]
            },
            "Content.requestUserInterest - Positive Scenario: Platform-UX - Notify requestUserInterest with type interest and reason recording": {
                "req": [
                    {
                        "method": {
                            "id": "UserInterest 4.3",
                            "description": "Positive Scenario: with type interest and reason recording"
                        }
                    }
                ]
            },
            "Content.requestUserInterest - Positive Scenario: Platform-UX - Notify requestUserInterest with type disinterest and reason playlist": {
                "req": [
                    {
                        "method": {
                            "id": "UserInterest 4.4",
                            "description": "Positive Scenario: with type disinterest and reason playlist"
                        }
                    }
                ]
            },
            "Content.requestUserInterest - Positive Scenario: Platform-UX - Notify requestUserInterest with type disinterest and reason reaction": {
                "req": [
                    {
                        "method": {
                            "id": "UserInterest 4.5",
                            "description": "Positive Scenario: with type disinterest and reason reaction"
                        }
                    }
                ]
            },
            "Content.requestUserInterest - Positive Scenario: Platform-UX - Notify requestUserInterest with type disinterest and reason recording": {
                "req": [
                    {
                        "method": {
                            "id": "UserInterest 4.6",
                            "description": "Positive Scenario: with type disinterest and reason recording"
                        }
                    }
                ]
            },
            "Content.requestUserInterest - Negative Scenario: Platform-UX - Notify requestUserInterest without registering for providers": {
                "req": [
                    {
                        "method": {
                            "id": "UserInterest 4.7",
                            "description": "Negative Scenario: Notify requestUserInterest without registering for providers"
                        }
                    }
                ]
            }
        }
    }
}